'''
Задача E
++++++++

В одном карточном клубе состоит N джентльменов. Иногда азарт некоторых из них берет верх над благоразумием, и кто-то
проигрывает больше денег, чем у него есть с собой. В этом случае проигравший обычно берет в долг у кого-то из
посетителей клуба, чтобы расплатиться с партнерами по игре. Чтобы начать новый год “с чистого листа”, джентльмены решили
собраться в клубе и оплатить все долговые расписки, которые накопились у них друг к другу. Однако выяснилось, что иногда
одни и те же джентльмены в разные дни выступали как в роли должников, так и в роли кредиторов. Поскольку истинные
джентльмены считают мелочный подсчет денег ниже своего достоинства, то расчетами придется заняться вам.

Напишите программу, которая по заданным распискам вычислит, сколько всего должен каждый джентльмен выплатить другим (или
получить с других).

Первая строка входных данных содержит сначала число N — количество джентльменов (натуральное, не превышает 100, не менее
2), и число K — количество долговых расписок (натуральное, не превышает 10000), после этого следует K троек чисел: номер
джентльмена взявшего в долг, номер джентльмена давшего деньги и сумма. Номера джентльменов в расписках — натуральные
числа, не превышающие N. Сумма — натуральное число, не превышает 100. Гарантируется, что ни один джентльмен не брал в
долг сам у себя.

Выведите N чисел — суммы, которые должны получить соответствующие джентльмены. Выведите положительное число, если этот
джентльмен должен получить деньги от других, отрицательное — если он должен отдать деньги другим.

+---------+------------+
| Ввод    | Вывод      |
+=========+============+
| 2 3     | -50 50     |
+---------+------------+
| 1 2 10  |            |
+---------+------------+
| 1 2 20  |            |
+---------+------------+
| 1 2 20  |            |
+---------+------------+
+---------+------------+
| 3 1     | 100 0 -100 |
+---------+------------+
| 3 1 100 |            |
+---------+------------+
'''
def Debts(L, K, N):
    debts = [0] * N
    print(debts)
    for l in L:
        debts[l[0] - 1] -= l[2]
        debts[l[1] - 1] += l[2]
    return debts

fi = open('input.txt', 'r')
fo = open('output.txt', 'w')
N, K = list(map(int, fi.readline().split()))
L = []
for i in range(K):
    L.append(list(map(int, fi.readline().split())))

print(" ".join(list(map(str, Debts(L, K, N)))), file=fo)
